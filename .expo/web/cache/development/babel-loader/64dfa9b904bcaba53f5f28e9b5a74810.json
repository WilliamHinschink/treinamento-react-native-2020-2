{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/william/Desktop/Projetos-Treinamentos/treinamento-react-native-2020-2/src/ui/screens/home.screen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { PlaylistCard } from \"../components/playslist-card.components\";\nimport { PlaylistMock } from \"../../mock/playlist.mock\";\nexport var HomeScreen = function HomeScreen() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(false);\n    }, 1000);\n  });\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    var imageUrl = item.imageUrl,\n        title = item.title;\n    return React.createElement(PlaylistCard, {\n      image: imageUrl,\n      title: title,\n      duration: item.duration,\n      quantity: item.quantity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    });\n  };\n\n  var Content = function Content() {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'white',\n        paddingTop: 20,\n        paddingHorizontal: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontWeight: 'bold',\n        color: '#414141',\n        fontSize: 32,\n        marginTop: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Playlists\"), React.createElement(FlatList, {\n      data: PlaylistMock.data,\n      keyExtractor: function keyExtractor(item) {\n        item.id;\n      },\n      renderItem: renderItem,\n      contentContainerStyle: {\n        paddingHorizontal: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  var Loader = function Loader() {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      color: 'purple',\n      size: 'large',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  return isLoading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }\n  }) : React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  });\n};","map":{"version":3,"sources":["/home/william/Desktop/Projetos-Treinamentos/treinamento-react-native-2020-2/src/ui/screens/home.screen.js"],"names":["React","useState","useEffect","PlaylistCard","PlaylistMock","HomeScreen","isLoading","setIsLoading","setTimeout","renderItem","item","imageUrl","title","duration","quantity","Content","flex","backgroundColor","paddingTop","paddingHorizontal","fontWeight","color","fontSize","marginTop","data","id","Loader","justifyContent","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,YAAT;AACA,SAASC,YAAT;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACOJ,QAAQ,CAAC,IAAD,CADf;AAAA;AAAA,MACpBK,SADoB;AAAA,MACTC,YADS;;AAE5BL,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,UAAU,CAAC,YAAM;AACbD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJQ,CAAT;;AAMA,MAAME,UAAU,GAAG,SAAbA,UAAa,OAAY;AAAA,QAAVC,IAAU,QAAVA,IAAU;AAAA,QACpBC,QADoB,GACDD,IADC,CACpBC,QADoB;AAAA,QACVC,KADU,GACDF,IADC,CACVE,KADU;AAG3B,WACI,oBAAC,YAAD;AACI,MAAA,KAAK,EAAED,QADX;AAEI,MAAA,KAAK,EAAEC,KAFX;AAGI,MAAA,QAAQ,EAAEF,IAAI,CAACG,QAHnB;AAII,MAAA,QAAQ,EAAEH,IAAI,CAACI,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH,GAXD;;AAaA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AACTC,QAAAA,IAAI,EAAE,CADG;AAETC,QAAAA,eAAe,EAAE,OAFR;AAGTC,QAAAA,UAAU,EAAE,EAHH;AAITC,QAAAA,iBAAiB,EAAE;AAJV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AACTC,QAAAA,UAAU,EAAE,MADH;AAETC,QAAAA,KAAK,EAAE,SAFE;AAGTC,QAAAA,QAAQ,EAAE,EAHD;AAITC,QAAAA,SAAS,EAAE;AAJF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,EAaI,oBAAC,QAAD;AACI,MAAA,IAAI,EAAEnB,YAAY,CAACoB,IADvB;AAEI,MAAA,YAAY,EAAE,sBAACd,IAAD,EAAU;AACpBA,QAAAA,IAAI,CAACe,EAAL;AACH,OAJL;AAKI,MAAA,UAAU,EAAEhB,UALhB;AAMI,MAAA,qBAAqB,EAAE;AAACU,QAAAA,iBAAiB,EAAE;AAApB,OAN3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ;AAwBH,GAzBD;;AA2BA,MAAMO,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACV,QAAAA,IAAI,EAAC,CAAN;AAASW,QAAAA,cAAc,EAAE,QAAzB;AAAmCC,QAAAA,UAAU,EAAE;AAA/C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAE,QAA1B;AAAoC,MAAA,IAAI,EAAE,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH,GAND;;AAQA,SAAOtB,SAAS,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAgB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC;AACH,CAzDM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FlatList, Text, View, ActivityIndicator } from \"react-native\";\nimport { PlaylistCard } from \"../components/playslist-card.components\";\nimport { PlaylistMock } from \"../../mock/playlist.mock\";\n\nexport const HomeScreen = () => {\n    const  [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        setTimeout(() => {\n            setIsLoading(false)\n        }, 1000)\n    })\n\n    const renderItem = ({item}) => {\n        const {imageUrl, title} = item;\n\n        return (\n            <PlaylistCard\n                image={imageUrl}\n                title={title}\n                duration={item.duration}\n                quantity={item.quantity}\n            />\n        )\n    };\n\n    const Content = () => {\n        return (\n            <View style={{\n                flex: 1,\n                backgroundColor: 'white',\n                paddingTop: 20,\n                paddingHorizontal: 30\n            }}>\n                <Text style={{\n                    fontWeight: 'bold',\n                    color: '#414141',\n                    fontSize: 32,\n                    marginTop: 30\n                }}\n                >Playlists</Text>\n                <FlatList\n                    data={PlaylistMock.data}\n                    keyExtractor={(item) => {\n                        item.id\n                    }}\n                    renderItem={renderItem}\n                    contentContainerStyle={{paddingHorizontal: 20}}\n                />\n            </View>\n        )\n    }\n\n    const Loader = () => {\n        return (\n            <View style={{flex:1, justifyContent: 'center', alignItems: 'center'}}>\n                <ActivityIndicator color={'purple'} size={'large'} />\n            </View>\n        )\n    }\n\n    return isLoading ? <Loader /> : <Content />;\n}\n"]},"metadata":{},"sourceType":"module"}